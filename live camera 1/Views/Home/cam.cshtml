<!DOCTYPE html>
<html>
<head>
    <title>Camera Streaming</title>
    <style>
        body {
            background-color: black;
        }

        

        #camera-preview {
            width: 1300px; 
            height: 450px; 
            border: 2px solid #555555;
            position:fixed;
            background-color:#565656;
            left:1px;
        
        }

        #start-stop-stream {
          position:fixed;
          border:none;
          font-family:'Comic Sans MS';
          background-color:aqua;
          left : 4px ;
      }

        #chat-container {
            width: 300px;
            height: 400px; 
            border: 0px ;
            overflow-y: scroll; 
            position: absolute; 
            left: 1000px; 
            z-index: 1;
        }

       

        #message-input {
            width: 100%;
            padding: 10px;
            box-sizing: border-box;
            border: 1px solid #000;
           
        }
            
    </style>
</head>
<body>
   
        <video id="camera-preview" autoplay></video>
    <div id="chat-container">
            <textarea id="message-input" placeholder="اكتب رسالتك هنا"></textarea>
            <button id="send-message">إرسال</button>
    </div>
        
   

    <button id="start-stop-stream">Start Streaming</button>
    
  
    
    
    <script>
        const videoElement = document.getElementById('camera-preview');
        const startStopButton = document.getElementById('start-stop-stream');
        const chatContainer = document.getElementById('chat-container');
        const messageInput = document.getElementById('message-input');
        const sendMessageButton = document.getElementById('send-message');
        let isStreaming = false;
        let stream;

        
        function addMessageToChat(message) {
            const messageElement = document.createElement('div');
            messageElement.textContent = message;
            chatContainer.appendChild(messageElement);

            
            chatContainer.scrollTop = chatContainer.scrollHeight;
        }

        async function toggleCamera() {
            try {
                if (isStreaming) {
                   
                    const tracks = stream.getTracks();
                    tracks.forEach(track => track.stop());
                    videoElement.srcObject = null;

                    
                    startStopButton.textContent = 'start Streaming';
                    isStreaming = false;
                } else {
                    
                    stream = await navigator.mediaDevices.getUserMedia({ video: true });
                    videoElement.srcObject = stream;

                    
                    startStopButton.textContent = 'stop Streaming';
                    isStreaming = true;
                }
            } catch (error) {
                console.error('Error accessing camera:', error);
            }
        }

        function sendMessage() {
            const message = messageInput.value;
            if (message.trim() !== '') {
                addMessageToChat(message);
                
                messageInput.value = ''; 
            }
        }

        startStopButton.addEventListener('click', () => {
            toggleCamera();
        });

        sendMessageButton.addEventListener('click', () => {
            sendMessage();
        });

        
        messageInput.addEventListener('keydown', (event) => {
            if (event.key === 'Enter') {
                sendMessage();
            }
        });
    </script>
</body>
</html>